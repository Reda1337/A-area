{"version":3,"file":"videojs-player.esm.js","sources":["../../../player/props.ts","../../../player/events.ts","../../../player/player.ts","../../../player/state.ts","../src/helper.ts","../src/component.ts","../src/index.ts"],"sourcesContent":["import videojs from 'video.js'\nimport type { VideoJsPlayerOptions } from 'video.js'\nimport type { VideoJsPlayer } from './type'\n\ntype PropType<T = any> = { (): T }\ntype InferPropType<T> = T extends PropType<infer V> ? V : T\n\nconst prop = <T>(options: {\n  type: PropType<T>\n  default?: any\n  onChange?: (player: VideoJsPlayer, newValue: T, oldValue?: T) => any\n  onEvent?: (player: VideoJsPlayer, callback: (newValue: T) => void) => any\n}) => options\n\n// Standard <video> Element Options\n// https://videojs.com/guides/options/#standard\nconst videoProps = {\n  src: prop({\n    type: String,\n    onChange: (player, src) => player.src(src)\n  }),\n  width: prop({\n    type: Number,\n    onChange: (player, width) => player.width(width),\n    onEvent: (player, cb) => {\n      player.on(['playerresize', 'resize'], () => cb(player.width()))\n    }\n  }),\n  height: prop({\n    type: Number,\n    onChange: (player, height) => player.height(height),\n    onEvent: (player, cb) => {\n      player.on(['playerresize', 'resize'], () => cb(player.height()))\n    }\n  }),\n  preload: prop({\n    type: String as PropType<'auto' | 'metadata' | 'none'>,\n    // https://github.com/videojs/video.js/blob/main/src/js/player.js#L3696\n    onChange: (player, preload) => player.preload(preload as any)\n  }),\n  loop: prop({\n    type: Boolean,\n    onChange: (player, loop) => player.loop(loop)\n  }),\n  muted: prop({\n    type: Boolean,\n    onChange: (player, muted) => player.muted(muted),\n    onEvent: (player, cb) => player.on('volumechange', () => cb(player.muted()))\n  }),\n  poster: prop({\n    type: String,\n    onChange: (player, poster) => player.poster(poster),\n    onEvent: (player, cb) => player.on('posterchange', () => cb(player.poster()))\n  }),\n  controls: prop({\n    type: Boolean,\n    onChange: (player, controls) => player.controls(controls),\n    onEvent: (player, cb) => {\n      player.on('controlsenabled', () => cb(true))\n      player.on('controlsdisabled', () => cb(false))\n    }\n  }),\n  // https://videojs.com/guides/options/#autoplay\n  autoplay: prop({\n    type: [Boolean, String] as unknown as PropType<boolean | 'muted' | 'play' | 'any'>,\n    onChange: (player, autoplay) => player.autoplay(autoplay)\n  }),\n  // https://github.com/videojs/video.js/blob/main/src/js/player.js#L793\n  // Support both crossOrigin and crossorigin to reduce confusion and issues around the name.\n  crossorigin: prop({\n    type: String,\n    onChange: (player, value) => player.crossOrigin(value as any)\n  }),\n  crossOrigin: prop({\n    type: String,\n    onChange: (player, value) => player.crossOrigin(value as any)\n  }),\n  playsinline: prop({\n    type: Boolean,\n    onChange: (player, value) => player.playsinline(value)\n  }),\n  playsInline: prop({\n    type: Boolean,\n    onChange: (player, value) => player.playsinline(value)\n  })\n}\n\n// Video.js specific Options\n// https://videojs.com/guides/options/#videojs-specific-options\nconst videoJsProps = {\n  id: prop({ type: String }),\n  sources: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['sources']>>,\n    onChange: (player, sources) => player.src(sources)\n  }),\n  tracks: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['tracks']>>,\n    onChange: (player, newTracks) => {\n      // https://github.com/videojs/videojs-playlist/blob/main/src/play-item.js\n      const oldTracks = player.remoteTextTracks()\n      // This uses a `while` loop rather than `forEach` because the `TextTrackList` object is a live DOM list (not an array).\n      let index = oldTracks?.length || 0\n      while (index--) {\n        player.removeRemoteTextTrack(oldTracks[index] as any as HTMLTrackElement)\n      }\n      // Add new text tracks.\n      player.ready(() => {\n        newTracks.forEach((track) => player.addRemoteTextTrack(track, false))\n      })\n    }\n  }),\n  textTrackSettings: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['textTrackSettings']>>,\n    onChange: (player, value) => (player as any).textTrackSettings.options(value)\n  }),\n  language: prop({\n    type: String,\n    onChange: (player, language) => player.language(language),\n    onEvent: (player, cb) => player.on('languagechange', () => cb(player.language()))\n  }),\n  // https://videojs.com/guides/options/#languages\n  // https://videojs.com/guides/languages/\n  // https://docs.videojs.com/module-videojs-videojs.html#.addLanguage\n  languages: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['languages']>>\n  }),\n  playbackRates: prop({\n    type: Array as PropType<NonNullable<VideoJsPlayerOptions['playbackRates']>>,\n    onChange: (player, newRates) => player.playbackRates(newRates ?? []),\n    onEvent: (player, cb) => {\n      player.on('playbackrateschange', () => cb(player.playbackRates()))\n    }\n  }),\n  audioOnlyMode: prop({\n    type: Boolean,\n    onChange: (player, value) => player.audioOnlyMode(value)\n  }),\n  audioPosterMode: prop({\n    type: Boolean,\n    onChange: (player, value) => player.audioPosterMode(value)\n  }),\n  responsive: prop({\n    type: Boolean,\n    onChange: (player, value) => player.responsive(value)\n  }),\n  breakpoints: prop({\n    type: Object as PropType<Partial<videojs.Breakpoint>>,\n    onChange: (player, value) => player.breakpoints(value)\n  }),\n  fluid: prop({\n    type: Boolean,\n    onChange: (player, value) => player.fluid(value)\n  }),\n  // https://docs.videojs.com/player#fill\n  fill: prop({\n    type: Boolean,\n    onChange: (player, value) => player.fill(value)\n  }),\n  aspectRatio: prop({\n    type: String,\n    onChange: (player, ratio) => player.aspectRatio(ratio)\n  }),\n  // https://videojs.com/guides/options/#fullscreen\n  fullscreen: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['fullscreen']>>\n  }),\n  // https://videojs.com/guides/options/#liveui\n  liveui: prop({ type: Boolean }),\n  // https://videojs.com/guides/options/#livetrackertrackingthreshold\n  liveTracker: prop({\n    type: Object as PropType<\n      Partial<{\n        trackingThreshold: number\n        liveTolerance: number\n        [key: string]: any\n      }>\n    >\n  }),\n  disablePictureInPicture: prop({\n    type: Boolean,\n    onChange: (player, value) => player.disablePictureInPicture(value)\n  }),\n  notSupportedMessage: prop({ type: String }),\n  normalizeAutoplay: prop({ type: Boolean }),\n  noUITitleAttributes: prop({ type: Boolean }),\n  preferFullWindow: prop({ type: Boolean }),\n  suppressNotSupportedError: prop({ type: Boolean }),\n  techCanOverridePoster: prop({ type: Boolean }),\n  reportTouchActivity: prop({ type: Boolean }),\n  techOrder: prop({ type: Array as PropType<Array<string>> }),\n  // https://videojs.com/guides/options/#inactivitytimeout\n  inactivityTimeout: prop({ type: Number }),\n  userActions: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['userActions']>>\n  }),\n  // https://videojs.com/guides/options/#plugins\n  // https://videojs.com/guides/plugins/\n  plugins: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['plugins']>>\n  }),\n  restoreEl: prop({ type: [Boolean, Object] as unknown as PropType<boolean | Element> }),\n  'vtt.js': prop({ type: String })\n}\n\n// Video.js component Options\n// https://videojs.com/guides/options/#component-options\nconst videoJsComponentProps = {\n  children: prop({\n    type: [Array, Object] as unknown as PropType<NonNullable<VideoJsPlayerOptions['children']>>\n  }),\n  // https://videojs.com/guides/options/#controlbarremainingtimedisplaydisplaynegative\n  controlBar: prop({\n    type: Object as PropType<NonNullable<VideoJsPlayerOptions['controlBar']>>,\n    onChange: (player, value) => player.controlBar.options(value)\n  })\n}\n\n// Video.js tech Options\n// https://videojs.com/guides/options/#tech-options\nconst videoJsTechProps = {\n  html5: prop({\n    type: Object as PropType<\n      Partial<{\n        vhs: any\n        nativeControlsForTouch: boolean\n        nativeAudioTracks: boolean\n        nativeTextTracks: boolean\n        nativeVideoTracks: boolean\n        preloadTextTracks: boolean\n      }>\n    >\n  })\n}\n\n// Framework component Options\nconst componentProps = {\n  volume: prop({\n    type: Number,\n    onChange: (player, volume) => player.volume(volume),\n    onEvent: (player, cb) => player.on('volumechange', () => cb(player.volume()))\n  }),\n  playbackRate: prop({\n    type: Number,\n    onChange(player, rate) {\n      // When playbackRate changes, sync the value to defaultPlaybackRate to\n      // ensure that the last saved playbackRate is automatically read when the video changes source.\n      player.playbackRate(rate)\n      player.defaultPlaybackRate(rate)\n    },\n    onEvent(player, callback) {\n      player.on('ratechange', () => {\n        callback(player.playbackRate())\n      })\n    }\n  }),\n  // Fallback for video.js options\n  options: prop({\n    type: Object as PropType<VideoJsPlayerOptions>\n  })\n}\n\nexport const propsConfig = {\n  ...videoProps,\n  ...videoJsProps,\n  ...videoJsComponentProps,\n  ...videoJsTechProps,\n  ...componentProps\n} as const\n\nexport type PropsConfig = typeof propsConfig\nexport type PropKey = keyof PropsConfig\nexport type Props = {\n  [K in PropKey]?: InferPropType<typeof propsConfig[K]['type']>\n}\n\nexport const propKeys = Object.keys(propsConfig) as Array<PropKey>\n","// https://www.w3.org/2010/05/video/mediaevents.html\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#events\n// https://github.com/videojs/video.js/blob/main/src/js/tech/html5.js#L1204\nconst html5EventsMap = {\n  loadstart: 'onLoadStart',\n  suspend: 'onSuspend',\n  abort: 'onAbort',\n  error: 'onError',\n  emptied: 'onEmptied',\n  stalled: 'onStalled',\n  loadedmetadata: 'onLoadedMetadata',\n  loadeddata: 'onLoadedData',\n  canplay: 'onCanPlay',\n  canplaythrough: 'onCanPlayThrough',\n  playing: 'onPlaying',\n  waiting: 'onWaiting',\n  seeking: 'onSeeking',\n  seeked: 'onSeeked',\n  ended: 'onEnded',\n  durationchange: 'onDurationChange',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  play: 'onPlay',\n  pause: 'onpause',\n  ratechange: 'onRateChange',\n  resize: 'onResize',\n  volumechange: 'onVolumeChange'\n} as const\n\n// https://docs.videojs.com/player#event\nconst videoJsEventsMap = {\n  posterchange: 'onPosterChange',\n  languagechange: 'onLanguageChange',\n  fullscreenchange: 'onFullscreenChange',\n  playbackrateschange: 'onPlaybackRatesChange',\n  controlsdisabled: 'onControlsDisabled',\n  controlsenabled: 'onControlsEnabled',\n  enterFullWindow: 'onEnterFullWindow',\n  exitFullWindow: 'onExitFullWindow',\n  enterpictureinpicture: 'onEnterPictureInPicture',\n  leavepictureinpicture: 'onLeavePictureInPicture',\n  // https://docs.videojs.com/player#event:sourceset\n  sourceset: 'onSourceSet',\n  texttrackchange: 'onTextTrackChange',\n  textdata: 'onTextData',\n  useractive: 'onUserActive',\n  userinactive: 'onUserInactive',\n  usingcustomcontrols: 'onUsingCustomControls',\n  usingnativecontrols: 'onUsingNativeControls',\n  dispose: 'onDispose'\n} as const\n\nconst videoJsPluginEventsMap = {\n  beforepluginsetup: 'onBeforePluginSetup',\n  pluginsetup: 'onPluginSetup'\n  // pluginsetup:$name\n} as const\n\nconst videoJsComponentEventsMap = {\n  componentresize: 'onComponentResize',\n  playerresize: 'onPlayerResize',\n  ready: 'onReady',\n  tap: 'onTap'\n} as const\n\nexport const eventsMap = {\n  ...html5EventsMap,\n  ...videoJsEventsMap,\n  ...videoJsPluginEventsMap,\n  ...videoJsComponentEventsMap\n} as const\n\nexport type EventMap = typeof eventsMap\nexport type EventKey = keyof EventMap\nexport const events = Object.keys(eventsMap) as Array<EventKey>\n\nexport const camelCaseEvents = Object.values(eventsMap)\nexport type CamelCaseEventKey = typeof camelCaseEvents[number]\n","import videoJs, { VideoJsPlayerOptions } from 'video.js'\nimport { propsConfig, Props, PropKey } from './props'\nimport { events, EventKey } from './events'\nimport type { VideoJsPlayer } from './type'\n\n/**\n * Transform `string` className to `array`.\n * @link https://github.com/videojs/video.js/pull/7798\n * @link https://github.com/videojs/video.js/issues/7685\n * @description ```\n *  input: \" test-a    test-b   test-c  \"\n *  output: [\"test-a\", \"test-b\", \"test-c\"]\n * ```\n */\nconst standardizeClass = (className: string | void) => {\n  const trimmed = className?.trim().replace(/\\s+/g, ' ')\n  return trimmed ? trimmed.split(' ') ?? [] : []\n}\n\nexport interface CreatePlayerOptions {\n  props: Props\n  element: HTMLElement\n  className?: string\n  onEvent(eventName: EventKey, payload: Event): void\n}\n\nexport type PlayerResult = ReturnType<typeof createPlayer>\nexport const createPlayer = ({ props, element, className, onEvent }: CreatePlayerOptions) => {\n  // Exclude fallback options.\n  const { options: fallbackOptions = {}, ...optProps } = props\n\n  // Exclude undefined value.\n  const propOptions: Omit<Props, 'options'> = {}\n  const optPropKeys = Object.keys(optProps) as Array<keyof typeof optProps>\n  optPropKeys.forEach((key) => {\n    const value = optProps[key]\n    if (value !== undefined) {\n      // @ts-ignore\n      propOptions[key] = value\n    }\n  })\n\n  // Merge fallback options & exclude component options.\n  const { volume, playbackRate, ...initOptions } = {\n    ...propOptions,\n    ...fallbackOptions\n  }\n\n  // Merge some confusing prop names.\n  const videoJsOptions = {\n    ...initOptions,\n    // https://videojs.com/guides/options/#restoreel\n    // Since the dispose > restore element side effect of Video.js occurs after the component has been unmounted,\n    // a DOM retention error will occur if true, so it cannot be set to true.\n    // restoreEl: initOptions.restoreEl ?? false,\n    // Video.js only supports the `playsinline` property.\n    playsinline: initOptions.playsinline ?? initOptions.playsInline\n  }\n\n  // https://videojs.com/guides/embeds/\n  // https://videojs.com/guides/react/\n  // MARK: Player div ingest\n  // There are three ways to initialize a player, the \"Player div ingest\" type is the most suitable in a component scenario\n  // because it generates the least amount of DOM side effects,\n  // and this way it can fully utilize the existing div outer container and video elements without changing the DOM structure.\n  // The problem is that the Video.js player, when instantiated, reads the className property of the video element as the className of the outer container,\n  // but the component needs to satisfy the user's need to \"be able to use the className to specify the style from the moment the component is rendered\".\n  // So we need to assume that only the className specified by the user through the component is needed for style control,\n  // while the basic \"video-js\" - like className is another internal className with a specific side effect and used only for initializing the player.\n  // So we need to distinguish the className into innerClassName, which is controlled internally by the component and remains unchanged,\n  // and userClassName, which will be applied to the container element at times like init and change.\n  // The reason why userClassName cannot be used directly as className for video elements is that it may cause unintended style side effects,\n  // such as misalignment or recursive styles, due to the different DOM hierarchy.\n  // MARK: RawHTML\n  // A better solution may exist to create the player with a freshly created video element while maintaining a mounted identifier,\n  // and when the player is instantiated, return the instantiated DOM entirely through the component,\n  // but this relies on the framework supporting a RawHTML - like API - https://github.com/ reactjs/rfcs/pull/129\n  // Custom controls capabilities can be implemented through the Video.js Component - https://videojs.com/guides/react/\n  const player = videoJs(element, videoJsOptions, function () {\n    // Stringing video.js events to vue emits.\n    events.forEach((eventKey) => {\n      this.on(eventKey, (payload) => {\n        onEvent(eventKey, payload)\n      })\n    })\n\n    // init src\n    if (initOptions.src && !initOptions.sources) {\n      this.src(initOptions.src)\n    }\n\n    // init volume\n    if (volume && Number.isFinite(volume)) {\n      this.volume(volume)\n    }\n\n    // init playbackRate\n    // https://github.com/videojs/video.js/issues/5128\n    // https://github.com/videojs/video.js/issues/2516\n    // https://github.com/videojs/videojs-playlist/issues/158\n    // https://github.com/sampotts/plyr/blob/master/src/js/plyr.js#L677\n    // https://github.com/bytedance/xgplayer/blob/master/packages/xgplayer/src/skin/controls/playbackRate.js#L30\n    if (playbackRate && Number.isFinite(playbackRate)) {\n      // Video always reads defaultPlaybackRate as the initial playbackRate when switching video sources.\n      this.defaultPlaybackRate(playbackRate)\n      // Ensures that all synchronization code has been executed by the time playbackRate is executed.\n      setTimeout(() => {\n        this.playbackRate(playbackRate)\n      }, 0)\n    }\n  }) as VideoJsPlayer\n\n  // The component needs to be initialized with the initial className of the container element to\n  // avoid flickering of the style caused by applying the className after the player has been instantiated.\n  // There are two separate times when initClassName is consumed.\n  // 1. when the component is first rendered, before the player is instantiated,\n  // the className should act on the root container of the component's original element,\n  // which allows the user to control the style before the component is mounted.\n  // 2. Before the component is mounted, `addClass(initClassName)` should be applied to the player immediately after the player is created,\n  // as Video.js does not support such an option for className, so we have to do this,\n  // and currently the synchronization feature of the browser ensures that the user\n  // does not perceive the \"init(component) > remove(createPlayer) > add(player.addClass)\" replacement process for className.\n  if (className) {\n    standardizeClass(className).map((name) => player.addClass(name))\n  }\n\n  // Set new class names to Video.js container element.\n  const updateClassNames = (oldClassName: string | void, newClassName: string | void) => {\n    standardizeClass(oldClassName).map((name) => player.removeClass(name))\n    standardizeClass(newClassName).map((name) => player.addClass(name))\n  }\n\n  // Set new options to Video.js config.\n  const updateOptions = (options: VideoJsPlayerOptions) => {\n    player.options?.(options ?? {})\n  }\n\n  // Set new prop value to Video.js config.\n  const updatePropOption = <K extends PropKey>(key: K, value: Props[K]) => {\n    updateOptions({ [key]: value })\n    propsConfig[key]?.onChange?.(player, value as never)\n  }\n\n  const disposePlayer = () => player.dispose()\n\n  return {\n    player,\n    dispose: disposePlayer,\n    updateClassNames,\n    updateOptions,\n    updatePropOption\n  }\n}\n","import type { VideoJsPlayer as Player } from './type'\n\n// https://videojs.com/advanced/\n// https://github.com/videojs/videojs.com/blob/main/src/components/HomeComponents/AdvancedExample/mediaProperties.js\n// https://github.com/videojs/videojs.com/blob/main/src/components/HomeComponents/AdvancedExample/MediaPropertyItem.jsx\nconst StateConfig = {\n  // autoplay: { getter: (player: P) => player.autoplay() }, // ✘\n  // loop: { getter: (player: P) => player.loop() }, // ✘\n  // preload: { getter: (player: P) => player.preload() }, // ✘\n  // playsInline: { getter: (player: P) => player.playsinline() }, // ✘\n  // crossOrigin: { getter: (player: P) => player.crossOrigin() }, // ✘\n  src: {\n    getter: (player: Player) => player.src()\n  },\n  currentSrc: {\n    getter: (player: Player) => player.currentSrc()\n  },\n  currentSource: {\n    getter: (player: Player) => player.currentSource()\n  },\n  width: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.width()\n  },\n  height: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.height()\n  },\n  currentWidth: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.currentWidth()\n  },\n  currentHeight: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.currentHeight()\n  },\n  videoWidth: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.videoWidth()\n  },\n  videoHeight: {\n    events: ['resize', 'playerresize'],\n    getter: (player: Player) => player.videoHeight()\n  },\n  controls: {\n    events: ['controlsdisabled', 'controlsenabled'],\n    getter: (player: Player) => player.controls()\n  },\n  volume: {\n    events: ['volumechange'],\n    getter: (player: Player) => player.volume()\n  },\n  muted: {\n    events: ['volumechange'],\n    getter: (player: Player) => player.muted()\n  },\n  poster: {\n    events: ['posterchange'],\n    getter: (player: Player) => player.poster()\n  },\n  seeking: {\n    events: ['seeking'],\n    getter: (player: Player) => player.seeking()\n  },\n  paused: {\n    events: ['pause', 'play', 'playing'],\n    getter: (player: Player) => player.paused()\n  },\n  ended: {\n    events: ['ended', 'play'],\n    getter: (player: Player) => player.ended()\n  },\n  currentTime: {\n    events: ['timeupdate'],\n    getter: (player: Player) => player.currentTime()\n  },\n  duration: {\n    events: ['durationchange'],\n    getter: (player: Player) => player.duration()\n  },\n  playbackRate: {\n    events: ['ratechange'],\n    getter: (player: Player) => player.playbackRate()\n  },\n  playbackRates: {\n    events: ['playbackrateschange'],\n    getter: (player: Player) => player.playbackRates()\n  },\n  isFullscreen: {\n    events: ['fullscreenchange'],\n    getter: (player: Player) => player.isFullscreen()\n  },\n  isInPictureInPicture: {\n    events: ['enterpictureinpicture', 'leavepictureinpicture'],\n    getter: (player: Player) => player.isInPictureInPicture()\n  },\n  isLive: {\n    getter: (player: Player) => player.liveTracker?.isLive()\n  },\n  language: {\n    events: ['languagechange'],\n    getter: (player: Player) => player.language()\n  },\n  userActive: {\n    events: ['useractive', 'userinactive'],\n    getter: (player: Player) => player.userActive()\n  },\n  readyState: {\n    events: ['loadeddata'],\n    getter: (player: Player) => player.readyState()\n  },\n  networkState: {\n    events: ['loadeddata', 'error'],\n    getter: (player: Player) => player.networkState()\n  },\n  error: {\n    events: ['loadeddata', 'error'],\n    getter: (player: Player) => player.error()\n  },\n  buffered: {\n    events: ['progress'],\n    getter: (player: Player) => player.buffered()\n  },\n  bufferedPercent: {\n    events: ['progress'],\n    getter: (player: Player) => player.bufferedPercent()\n  },\n  played: {\n    events: ['timeupdate'],\n    getter: (player: Player) => player.played()\n  },\n  seekable: {\n    events: ['progress', 'seeked'],\n    getter: (player: Player) => player.seekable()\n  },\n  audioTracks: {\n    getter: (player: Player) => player.audioTracks?.()\n  },\n  videoTracks: {\n    getter: (player: any) => player.videoTracks?.()\n  },\n  textTracks: {\n    getter: (player: Player) => player.textTracks?.()\n  }\n}\n\ntype PlayerBastState = {\n  [K in keyof typeof StateConfig]: ReturnType<typeof StateConfig[K]['getter']>\n}\nexport interface PlayerState extends PlayerBastState {\n  playing: boolean\n  waiting: boolean\n}\n\nexport interface CreatePlayerStateOptions {\n  onInit: (state: PlayerState) => void\n  onUpdate: <K extends keyof PlayerState>(key: K, value: PlayerState[K], state: PlayerState) => void\n}\n\nexport const createPlayerState = (player: Player, options: CreatePlayerStateOptions) => {\n  const keys = Object.keys(StateConfig) as Array<keyof typeof StateConfig>\n  const state = keys.reduce(\n    (result, key) => ({ ...result, [key]: StateConfig[key].getter(player) }),\n    { playing: false, waiting: false } as PlayerState\n  )\n\n  // update state\n  const updateState = (key: keyof PlayerState, value: any) => {\n    state[key] = value as never\n    options.onUpdate(key, value, { ...state })\n  }\n\n  // playing state https://github.com/videojs/video.js/issues/181\n  // un-loop: play > playing > pause > ended\n  // loop: play > playing > [ended > restart] waiting > playing\n  player.on(['pause', 'ended'], () => {\n    updateState('playing', false)\n  })\n  player.on(['play', 'playing'], () => {\n    updateState('playing', true)\n  })\n\n  // https://github.com/videojs/video.js/blob/75ea699273d659593d95429d185865fb6e49cb93/src/js/player.js#L1743\n  player.on('waiting', () => {\n    updateState('waiting', true)\n    const timeWhenWaiting = player.currentTime()\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== player.currentTime()) {\n        updateState('waiting', false)\n        player.off('timeupdate', timeUpdateListener)\n      }\n    }\n    player.on('timeupdate', timeUpdateListener)\n  })\n\n  keys.forEach((key) => {\n    const target = StateConfig[key]\n    const baseEvents = ['loadstart', 'loadedmetadata']\n    player.on(baseEvents.concat((target as any).events ?? []), () => {\n      updateState(key, target.getter(player))\n    })\n  })\n\n  // init state\n  options.onInit({ ...state })\n}\n","import type { PropsConfig, PropKey, EventKey, VideoJsPlayer } from '../../../player'\nimport { propsConfig, propKeys, events } from '../../../player'\n\nconst twoWayPropKeys = propKeys.filter((key) => Boolean(propsConfig[key].onEvent))\nconst getPropUpdateEventName = (key: PropKey) => `update:${key}`\n\n// Convert all supported Video.js configuration changes to two-way binding events.\nexport const bindPropUpdateEvent = (options: {\n  player: VideoJsPlayer\n  onEvent: (key: EventKey, value: any) => void\n}) => {\n  twoWayPropKeys.forEach((key) => {\n    propsConfig[key]?.onEvent?.(options.player, (newValue: unknown) => {\n      options.onEvent(getPropUpdateEventName(key) as EventKey, newValue)\n    })\n  })\n}\n\n// Add two-way binding events to all props that have onEvent.\n// The event type information is missing here, but it is necessary.\nexport const normalizedEvents = [\n  ...events,\n  ...twoWayPropKeys.map(getPropUpdateEventName)\n] as typeof events\n\n// Set the default value of all Boolean type's props to undefined.\n// https://vuejs.org/guide/components/props.html#boolean-casting\nexport const normalizedProps = propKeys.reduce((result, key) => {\n  const prop = propsConfig[key]\n  const types = Array.isArray(prop.type) ? prop.type : [prop.type]\n  const newProp = { ...prop }\n  if (types.includes(Boolean)) {\n    newProp.default = void 0\n  }\n\n  return { ...result, [key]: newProp }\n}, {} as PropsConfig)\n","import { defineComponent, onMounted, onBeforeUnmount, h, normalizeClass } from 'vue'\nimport { shallowRef, ref, computed, readonly, watch, toRaw, DeepReadonly, PropType } from 'vue'\nimport { createPlayer, createPlayerState, propKeys } from '../../../player'\nimport { PlayerState, PlayerResult } from '../../../player'\nimport { normalizedProps, normalizedEvents, bindPropUpdateEvent } from './helper'\n\nconst MOUNTED_EVENT_NAME = 'mounted'\nconst UNMOUNTED_EVENT_NAME = 'unmounted'\n\nexport default defineComponent({\n  name: 'VueVideoPlayer',\n  props: { ...normalizedProps, class: [String, Object, Array] as PropType<unknown> },\n  emits: [...normalizedEvents, MOUNTED_EVENT_NAME, UNMOUNTED_EVENT_NAME],\n  // https://github.com/vuejs/rfcs/pull/192\n  // https://github.com/vuejs/core/pull/2693\n  // slots: Object as () => { player: VideoJsPlayer; state: DeepReadonly<PlayerState> },\n  setup(props, context) {\n    const { class: initClassName, ...rawProps } = toRaw(props)\n    const mounted = shallowRef(false)\n    const videoElement = shallowRef<HTMLVideoElement | null>(null)\n    const playerResult = shallowRef<PlayerResult | null>(null)\n    const videoJsPlayer = computed(() => {\n      return playerResult.value ? playerResult.value.player : null\n    })\n\n    const state = ref<PlayerState | null>(null)\n    const readOnlyState = computed<DeepReadonly<PlayerState> | null>(() => {\n      return state.value ? readonly(state.value) : null\n    })\n\n    onMounted(() => {\n      // Create player.\n      const playerRes = createPlayer({\n        element: videoElement.value!,\n        props: rawProps,\n        onEvent: context.emit\n      })\n\n      // Sync Video.js config change to update:prop event.\n      bindPropUpdateEvent({\n        player: playerRes.player,\n        onEvent: context.emit\n      })\n\n      // Sync Vue class name to Video.js container.\n      watch(\n        () => props.class,\n        (newClassName, oldClassName) => {\n          const ocn = normalizeClass(oldClassName)\n          const ncn = normalizeClass(newClassName)\n          playerRes.updateClassNames(ocn, ncn)\n        },\n        { immediate: true }\n      )\n\n      // Sync fallback options to Video.js config.\n      watch(\n        () => props.options,\n        (newOptions) => playerRes.updateOptions(newOptions ?? {}),\n        { deep: true }\n      )\n\n      // Sync component props to Video.js config.\n      propKeys\n        .filter((key) => key !== 'options')\n        .forEach((key) => {\n          watch(\n            () => props[key],\n            (newValue) => playerRes.updatePropOption(key, newValue),\n            { deep: true }\n          )\n        })\n\n      // Create player state.\n      createPlayerState(playerRes.player, {\n        onInit(initState) {\n          state.value = initState\n        },\n        onUpdate(key, value) {\n          if (state.value) {\n            state.value[key] = value\n          }\n        }\n      })\n\n      // Emit mounted event.\n      playerResult.value = playerRes\n      mounted.value = true\n      context.emit(MOUNTED_EVENT_NAME, {\n        video: videoElement.value,\n        player: videoJsPlayer.value,\n        state: readOnlyState.value\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (playerResult.value) {\n        playerResult.value.dispose()\n        playerResult.value = null\n        state.value = null\n        context.emit(UNMOUNTED_EVENT_NAME)\n      }\n    })\n\n    return () => {\n      return h('div', { 'data-vjs-player': '', class: normalizeClass(initClassName) }, [\n        h('video', {\n          class: ['video-js', 'v-video-player'],\n          ref: videoElement\n        }),\n        mounted.value &&\n          context.slots.default?.({\n            video: videoElement.value!,\n            player: videoJsPlayer.value!,\n            state: readOnlyState.value!\n          })\n      ])\n    }\n  }\n})\n","import type { Plugin } from 'vue'\nimport Component from './component'\n\nexport type {\n  Props as VideoPlayerProps,\n  EventKey as VideoPlayerEvents,\n  PlayerState as VideoPlayerState\n} from '../../../player'\n\nexport const VideoPlayer = Component\nexport const install: Plugin = (app) => {\n  app.component('VideoPlayer', Component)\n  app.component(Component.name, Component)\n}\n\nexport default {\n  VideoPlayer: Component,\n  install\n}\n"],"names":["const","videoProps","src","type","String","onChange","player","width","Number","onEvent","cb","on","height","preload","loop","Boolean","muted","poster","controls","autoplay","crossorigin","value","crossOrigin","playsinline","playsInline","videoJsProps","id","sources","Array","tracks","newTracks","oldTracks","remoteTextTracks","index","length","removeRemoteTextTrack","ready","forEach","track","addRemoteTextTrack","textTrackSettings","Object","options","language","languages","playbackRates","newRates","audioOnlyMode","audioPosterMode","responsive","breakpoints","fluid","fill","aspectRatio","ratio","fullscreen","liveui","liveTracker","disablePictureInPicture","notSupportedMessage","normalizeAutoplay","noUITitleAttributes","preferFullWindow","suppressNotSupportedError","techCanOverridePoster","reportTouchActivity","techOrder","inactivityTimeout","userActions","plugins","restoreEl","videoJsComponentProps","children","controlBar","videoJsTechProps","html5","componentProps","volume","playbackRate","rate","defaultPlaybackRate","callback","propsConfig","propKeys","keys","eventsMap","assign","loadstart","suspend","abort","error","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","playing","waiting","seeking","seeked","ended","durationchange","timeupdate","progress","play","pause","ratechange","resize","volumechange","posterchange","languagechange","fullscreenchange","playbackrateschange","controlsdisabled","controlsenabled","enterFullWindow","exitFullWindow","enterpictureinpicture","leavepictureinpicture","sourceset","texttrackchange","textdata","useractive","userinactive","usingcustomcontrols","usingnativecontrols","dispose","beforepluginsetup","pluginsetup","componentresize","playerresize","tap","events","values","standardizeClass","className","trimmed","trim","replace","_a","split","StateConfig","getter","currentSrc","currentSource","currentWidth","currentHeight","videoWidth","videoHeight","paused","currentTime","duration","isFullscreen","isInPictureInPicture","isLive","userActive","readyState","networkState","buffered","bufferedPercent","played","seekable","audioTracks","call","videoTracks","textTracks","twoWayPropKeys","filter","key","getPropUpdateEventName","normalizedEvents","concat","map","normalizedProps","reduce","result","prop","types","isArray","newProp","includes","default","obj","Component","defineComponent","name","props","class","emits","setup","context","toRaw","initClassName","rawProps","__rest","mounted","shallowRef","videoElement","playerResult","videoJsPlayer","computed","state","ref","readOnlyState","readonly","onMounted","playerRes","element","fallbackOptions","optProps","propOptions","undefined","_b","initOptions","videoJsOptions","videoJs","eventKey","this","payload","isFinite","setTimeout","addClass","updateOptions","oldClassName","newClassName","removeClass","createPlayer","emit","newValue","watch","ocn","normalizeClass","ncn","updateClassNames","immediate","newOptions","deep","updatePropOption","updateState","onUpdate","timeWhenWaiting","timeUpdateListener","off","target","onInit","createPlayerState","initState","video","onBeforeUnmount","h","slots","VideoPlayer","install","app","component"],"mappings":"mhBAOAA,IASMC,EAAa,CACjBC,IAAU,CACRC,KAAMC,OACNC,SAAQ,SAAGC,EAAQJ,GAAQ,OAAAI,EAAOJ,IAAIA,EAAI,GAE5CK,MAAY,CACVJ,KAAMK,OACNH,SAAQ,SAAGC,EAAQC,GAAU,OAAAD,EAAOC,MAAMA,EAAM,EAChDE,QAAS,SAACH,EAAQI,GAChBJ,EAAOK,GAAG,CAAC,eAAgB,sBAAiB,OAAAD,EAAGJ,EAAOC,QAAQ,GAC/D,GAEHK,OAAa,CACXT,KAAMK,OACNH,SAAQ,SAAGC,EAAQM,GAAW,OAAAN,EAAOM,OAAOA,EAAO,EACnDH,QAAS,SAACH,EAAQI,GAChBJ,EAAOK,GAAG,CAAC,eAAgB,sBAAiB,OAAAD,EAAGJ,EAAOM,SAAS,GAChE,GAEHC,QAAc,CACZV,KAAMC,OAENC,SAAQ,SAAGC,EAAQO,GAAY,OAAAP,EAAOO,QAAQA,EAAe,GAE/DC,KAAW,CACTX,KAAMY,QACNV,SAAQ,SAAGC,EAAQQ,GAAS,OAAAR,EAAOQ,KAAKA,EAAK,GAE/CE,MAAY,CACVb,KAAMY,QACNV,SAAQ,SAAGC,EAAQU,GAAU,OAAAV,EAAOU,MAAMA,EAAM,EAChDP,iBAAUH,EAAQI,GAAE,OAAKJ,EAAOK,GAAG,gBAAc,kBAAQD,EAAGJ,EAAOU,QAAQ,GAAC,GAE9EC,OAAa,CACXd,KAAMC,OACNC,SAAQ,SAAGC,EAAQW,GAAW,OAAAX,EAAOW,OAAOA,EAAO,EACnDR,iBAAUH,EAAQI,GAAE,OAAKJ,EAAOK,GAAG,gBAAc,kBAAQD,EAAGJ,EAAOW,SAAS,GAAC,GAE/EC,SAAe,CACbf,KAAMY,QACNV,SAAQ,SAAGC,EAAQY,GAAa,OAAAZ,EAAOY,SAASA,EAAS,EACzDT,QAAS,SAACH,EAAQI,GAChBJ,EAAOK,GAAG,mBAAiB,WAAQ,OAAAD,GAAG,EAAK,IAC3CJ,EAAOK,GAAG,oBAAkB,WAAQ,OAAAD,GAAG,EAAM,GAC9C,GAGHS,SAAe,CACbhB,KAAM,CAACY,QAASX,QAChBC,SAAQ,SAAGC,EAAQa,GAAa,OAAAb,EAAOa,SAASA,EAAS,GAI3DC,YAAkB,CAChBjB,KAAMC,OACNC,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOgB,YAAYD,EAAa,GAE/DC,YAAkB,CAChBnB,KAAMC,OACNC,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOgB,YAAYD,EAAa,GAE/DE,YAAkB,CAChBpB,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOiB,YAAYF,EAAM,GAExDG,YAAkB,CAChBrB,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOiB,YAAYF,EAAM,IAMpDI,EAAe,CACnBC,GAAS,CAAEvB,KAAMC,QACjBuB,QAAc,CACZxB,KAAMyB,MACNvB,SAAQ,SAAGC,EAAQqB,GAAY,OAAArB,EAAOJ,IAAIyB,EAAQ,GAEpDE,OAAa,CACX1B,KAAMyB,MACNvB,SAAU,SAACC,EAAQwB,GAKjB,IAHA9B,IAAM+B,EAAYzB,EAAO0B,mBAErBC,GAAQF,aAAA,EAAAA,EAAWG,SAAU,EAC1BD,KACL3B,EAAO6B,sBAAsBJ,EAAUE,IAGzC3B,EAAO8B,OAAK,WACVN,EAAUO,SAAQ,SAACC,GAAU,OAAAhC,EAAOiC,mBAAmBD,GAAO,EAAK,GACrE,GACD,GAEHE,kBAAwB,CACtBrC,KAAMsC,OACNpC,SAAQ,SAAGC,EAAQe,GAAK,OAAMf,EAAekC,kBAAkBE,QAAQrB,EAAM,GAE/EsB,SAAe,CACbxC,KAAMC,OACNC,SAAQ,SAAGC,EAAQqC,GAAa,OAAArC,EAAOqC,SAASA,EAAS,EACzDlC,iBAAUH,EAAQI,GAAE,OAAKJ,EAAOK,GAAG,kBAAgB,kBAAQD,EAAGJ,EAAOqC,WAAW,GAAC,GAKnFC,UAAgB,CACdzC,KAAMsC,QAERI,cAAoB,CAClB1C,KAAMyB,MACNvB,kBAAWC,EAAQwC,GAAQ,OAAKxC,EAAOuC,cAAcC,QAAAA,EAAY,GAAG,EACpErC,QAAS,SAACH,EAAQI,GAChBJ,EAAOK,GAAG,uBAAuB,WAAA,OAAMD,EAAGJ,EAAOuC,gBAAe,GACjE,GAEHE,cAAoB,CAClB5C,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOyC,cAAc1B,EAAM,GAE1D2B,gBAAsB,CACpB7C,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAO0C,gBAAgB3B,EAAM,GAE5D4B,WAAiB,CACf9C,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAO2C,WAAW5B,EAAM,GAEvD6B,YAAkB,CAChB/C,KAAMsC,OACNpC,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAO4C,YAAY7B,EAAM,GAExD8B,MAAY,CACVhD,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAO6C,MAAM9B,EAAM,GAGlD+B,KAAW,CACTjD,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAO8C,KAAK/B,EAAM,GAEjDgC,YAAkB,CAChBlD,KAAMC,OACNC,SAAQ,SAAGC,EAAQgD,GAAU,OAAAhD,EAAO+C,YAAYC,EAAM,GAGxDC,WAAiB,CACfpD,KAAMsC,QAGRe,OAAa,CAAErD,KAAMY,SAErB0C,YAAkB,CAChBtD,KAAMsC,QAQRiB,wBAA8B,CAC5BvD,KAAMY,QACNV,SAAQ,SAAGC,EAAQe,GAAU,OAAAf,EAAOoD,wBAAwBrC,EAAM,GAEpEsC,oBAA0B,CAAExD,KAAMC,QAClCwD,kBAAwB,CAAEzD,KAAMY,SAChC8C,oBAA0B,CAAE1D,KAAMY,SAClC+C,iBAAuB,CAAE3D,KAAMY,SAC/BgD,0BAAgC,CAAE5D,KAAMY,SACxCiD,sBAA4B,CAAE7D,KAAMY,SACpCkD,oBAA0B,CAAE9D,KAAMY,SAClCmD,UAAgB,CAAE/D,KAAMyB,OAExBuC,kBAAwB,CAAEhE,KAAMK,QAChC4D,YAAkB,CAChBjE,KAAMsC,QAIR4B,QAAc,CACZlE,KAAMsC,QAER6B,UAAgB,CAAEnE,KAAM,CAACY,QAAS0B,SAClC,SAAe,CAAEtC,KAAMC,SAKnBmE,EAAwB,CAC5BC,SAAe,CACbrE,KAAM,CAACyB,MAAOa,SAGhBgC,WAAiB,CACftE,KAAMsC,OACNpC,SAAQ,SAAGC,EAAQe,GAAK,OAAKf,EAAOmE,WAAW/B,QAAQrB,EAAM,IAM3DqD,EAAmB,CACvBC,MAAY,CACVxE,KAAMsC,SAcJmC,EAAiB,CACrBC,OAAa,CACX1E,KAAMK,OACNH,SAAQ,SAAGC,EAAQuE,GAAW,OAAAvE,EAAOuE,OAAOA,EAAO,EACnDpE,iBAAUH,EAAQI,GAAE,OAAKJ,EAAOK,GAAG,gBAAc,kBAAQD,EAAGJ,EAAOuE,SAAS,GAAC,GAE/EC,aAAmB,CACjB3E,KAAMK,OACNH,SAAQ,SAACC,EAAQyE,GAGfzE,EAAOwE,aAAaC,GACpBzE,EAAO0E,oBAAoBD,EAC5B,EACDtE,QAAO,SAACH,EAAQ2E,GACd3E,EAAOK,GAAG,yBACRsE,EAAS3E,EAAOwE,eAClB,GACD,GAGHpC,QAAc,CACZvC,KAAMsC,SAIGyC,EAAczC,yEACtBxC,GACAwB,GACA8C,GACAG,GACAE,GASQO,EAAW1C,OAAO2C,KAAKF,GClNvBG,EAAY5C,OACpB6C,OAAA7C,OAAA6C,OAAA7C,OAAA6C,OAAA7C,OAAA6C,OAAA,CAAA,EA/DkB,CACrBC,UAAW,cACXC,QAAS,YACTC,MAAO,UACPC,MAAO,UACPC,QAAS,YACTC,QAAS,YACTC,eAAgB,mBAChBC,WAAY,eACZC,QAAS,YACTC,eAAgB,mBAChBC,QAAS,YACTC,QAAS,YACTC,QAAS,YACTC,OAAQ,WACRC,MAAO,UACPC,eAAgB,mBAChBC,WAAY,eACZC,SAAU,aACVC,KAAM,SACNC,MAAO,UACPC,WAAY,eACZC,OAAQ,WACRC,aAAc,mBAIS,CACvBC,aAAc,iBACdC,eAAgB,mBAChBC,iBAAkB,qBAClBC,oBAAqB,wBACrBC,iBAAkB,qBAClBC,gBAAiB,oBACjBC,gBAAiB,oBACjBC,eAAgB,mBAChBC,sBAAuB,0BACvBC,sBAAuB,0BAEvBC,UAAW,cACXC,gBAAiB,oBACjBC,SAAU,aACVC,WAAY,eACZC,aAAc,iBACdC,oBAAqB,wBACrBC,oBAAqB,wBACrBC,QAAS,cAGoB,CAC7BC,kBAAmB,sBACnBC,YAAa,kBAImB,CAChCC,gBAAiB,oBACjBC,aAAc,iBACd/F,MAAO,UACPgG,IAAK,UAYMC,EAAS5F,OAAO2C,KAAKC,GAEH5C,OAAO6F,OAAOjD,GC9D7CrF,IAAMuI,EAAmB,SAACC,SAClBC,EAAUD,eAAAA,EAAWE,OAAOC,QAAQ,OAAQ,KAClD,OAAOF,GAAgC,QAAtBG,EAAAH,EAAQI,MAAM,YAAQ,IAAAD,EAAAA,EAAK,EAC9C,ECZME,EAAc,CAMlB5I,IAAK,CACH6I,gBAASzI,UAAmBA,EAAOJ,KAAK,GAE1C8I,WAAY,CACVD,gBAASzI,UAAmBA,EAAO0I,YAAY,GAEjDC,cAAe,CACbF,gBAASzI,UAAmBA,EAAO2I,eAAe,GAEpD1I,MAAO,CACL8H,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAOC,OAAO,GAE5CK,OAAQ,CACNyH,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAOM,QAAQ,GAE7CsI,aAAc,CACZb,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAO4I,cAAc,GAEnDC,cAAe,CACbd,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAO6I,eAAe,GAEpDC,WAAY,CACVf,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAO8I,YAAY,GAEjDC,YAAa,CACXhB,OAAQ,CAAC,SAAU,gBACnBU,gBAASzI,UAAmBA,EAAO+I,aAAa,GAElDnI,SAAU,CACRmH,OAAQ,CAAC,mBAAoB,mBAC7BU,gBAASzI,UAAmBA,EAAOY,UAAU,GAE/C2D,OAAQ,CACNwD,OAAQ,CAAC,gBACTU,gBAASzI,UAAmBA,EAAOuE,QAAQ,GAE7C7D,MAAO,CACLqH,OAAQ,CAAC,gBACTU,gBAASzI,UAAmBA,EAAOU,OAAO,GAE5CC,OAAQ,CACNoH,OAAQ,CAAC,gBACTU,gBAASzI,UAAmBA,EAAOW,QAAQ,GAE7CkF,QAAS,CACPkC,OAAQ,CAAC,WACTU,gBAASzI,UAAmBA,EAAO6F,SAAS,GAE9CmD,OAAQ,CACNjB,OAAQ,CAAC,QAAS,OAAQ,WAC1BU,gBAASzI,UAAmBA,EAAOgJ,QAAQ,GAE7CjD,MAAO,CACLgC,OAAQ,CAAC,QAAS,QAClBU,gBAASzI,UAAmBA,EAAO+F,OAAO,GAE5CkD,YAAa,CACXlB,OAAQ,CAAC,cACTU,gBAASzI,UAAmBA,EAAOiJ,aAAa,GAElDC,SAAU,CACRnB,OAAQ,CAAC,kBACTU,gBAASzI,UAAmBA,EAAOkJ,UAAU,GAE/C1E,aAAc,CACZuD,OAAQ,CAAC,cACTU,gBAASzI,UAAmBA,EAAOwE,cAAc,GAEnDjC,cAAe,CACbwF,OAAQ,CAAC,uBACTU,gBAASzI,UAAmBA,EAAOuC,eAAe,GAEpD4G,aAAc,CACZpB,OAAQ,CAAC,oBACTU,gBAASzI,UAAmBA,EAAOmJ,cAAc,GAEnDC,qBAAsB,CACpBrB,OAAQ,CAAC,wBAAyB,yBAClCU,gBAASzI,UAAmBA,EAAOoJ,sBAAsB,GAE3DC,OAAQ,CACNZ,OAAM,SAAGzI,GAAmB,IAAAsI,EAAA,OAAkB,QAAlBA,EAAAtI,EAAOmD,mBAAW,IAAAmF,OAAA,EAAAA,EAAEe,QAAQ,GAE1DhH,SAAU,CACR0F,OAAQ,CAAC,kBACTU,gBAASzI,UAAmBA,EAAOqC,UAAU,GAE/CiH,WAAY,CACVvB,OAAQ,CAAC,aAAc,gBACvBU,gBAASzI,UAAmBA,EAAOsJ,YAAY,GAEjDC,WAAY,CACVxB,OAAQ,CAAC,cACTU,gBAASzI,UAAmBA,EAAOuJ,YAAY,GAEjDC,aAAc,CACZzB,OAAQ,CAAC,aAAc,SACvBU,gBAASzI,UAAmBA,EAAOwJ,cAAc,GAEnDpE,MAAO,CACL2C,OAAQ,CAAC,aAAc,SACvBU,gBAASzI,UAAmBA,EAAOoF,OAAO,GAE5CqE,SAAU,CACR1B,OAAQ,CAAC,YACTU,gBAASzI,UAAmBA,EAAOyJ,UAAU,GAE/CC,gBAAiB,CACf3B,OAAQ,CAAC,YACTU,gBAASzI,UAAmBA,EAAO0J,iBAAiB,GAEtDC,OAAQ,CACN5B,OAAQ,CAAC,cACTU,gBAASzI,UAAmBA,EAAO2J,QAAQ,GAE7CC,SAAU,CACR7B,OAAQ,CAAC,WAAY,UACrBU,gBAASzI,UAAmBA,EAAO4J,UAAU,GAE/CC,YAAa,CACXpB,OAAQ,SAACzI,GAAkB,IAAAsI,EAAC,OAAkB,QAAlBA,EAAAtI,EAAO6J,mBAAW,IAAAvB,OAAA,EAAAA,EAAAwB,KAAA9J,EAAI,GAEpD+J,YAAa,CACXtB,OAAQ,SAACzI,GAAe,IAAAsI,EAAC,OAAkB,QAAlBA,EAAAtI,EAAO+J,mBAAW,IAAAzB,OAAA,EAAAA,EAAAwB,KAAA9J,EAAI,GAEjDgK,WAAY,CACVvB,OAAQ,SAACzI,GAAkB,IAAAsI,EAAC,OAAiB,QAAjBA,EAAAtI,EAAOgK,kBAAU,IAAA1B,OAAA,EAAAA,EAAAwB,KAAA9J,EAAI,IC3I/CiK,EAAiBpF,EAASqF,QAAM,SAAEC,GAAG,OAAK1J,QAAQmE,EAAYuF,GAAKhK,QAAQ,IAC3EiK,EAAyB,SAACD,GAAiB,MAAA,UAAUA,GAgB9CE,EACRtC,EACAuC,OAAAL,EAAeM,IAAIH,IAKXI,EAAkB3F,EAAS4F,QAAM,SAAEC,EAAQP,SAChDQ,EAAO/F,EAAYuF,GACnBS,EAAQtJ,MAAMuJ,QAAQF,EAAK9K,MAAQ8K,EAAK9K,KAAO,CAAC8K,EAAK9K,MACrDiL,EAAO3I,OAAA6C,OAAA,CAAA,EAAQ2F,GAKrB,OAJIC,EAAMG,SAAStK,WACjBqK,EAAQE,aAAU,GAGpB7I,OAAA6C,OAAA7C,OAAA6C,OAAA,CAAA,EAAY0F,OAAQ,CAAA,GAACP,GAAMW,EAASG,GACtC,GAAG,IC3BHC,EAAeC,EAAgB,CAC7BC,KAAM,iBACNC,MAAYlJ,OAAA6C,OAAA7C,OAAA6C,OAAA,CAAA,EAAAwF,GAAiB,CAAAc,MAAO,CAACxL,OAAQqC,OAAQb,SACrDiK,MAAWlB,UANc,WAMsB,CALpB,cAS3BmB,MAAK,SAACH,EAAOI,GACX/L,IAAM4I,EAAwCoD,EAAML,GAArCM,EAAArD,EAAAgD,MAAkBM,EAA3BC,EAAAvD,EAAA,CAAA,UACAwD,EAAUC,GAAW,GACrBC,EAAeD,EAAoC,MACnDE,EAAeF,EAAgC,MAC/CG,EAAgBC,cACpB,OAAOF,EAAalL,MAAQkL,EAAalL,MAAMf,OAAS,IAC1D,IAEMoM,EAAQC,EAAwB,MAChCC,EAAgBH,cACpB,OAAOC,EAAMrL,MAAQwL,EAASH,EAAMrL,OAAS,IAC/C,IA4EA,OA1EAyL,cAEE9M,IDzB8B0C,ECyBxBqK,EHLgB,SAAAJ,GAAU,MAAAhB,EAAAgB,EAAAhB,MAASqB,EAAAL,EAAAK,QAAWxE,EAAAmE,EAAAnE,sBAErByE,EAAAtB,EAAAjJ,aAAA,IAAAuK,IAAAA,EAAA,IAAyB,IAAlBC,EAAQf,EAAKR,EAAjD,CAAA,YAGAwB,EAAsC,CAAA,EACxB1K,OAAO2C,KAAK8H,GACpB7K,SAAQ,SAACoI,GACnBzK,IAAMqB,EAAQ6L,EAASzC,QACT2C,IAAV/L,IAEF8L,EAAY1C,GAAOpJ,EAEvB,IAGArB,IAAMqN,iCACDF,GACAF,GAFGpI,EAAAwI,EAAAxI,OAAQC,EAAAuI,EAAAvI,aAAiBwI,EAA3BnB,EAAAkB,EAAA,CAAA,SAAA,iBAMAE,iCACDD,GAAW,CAMd/L,oBAAaqH,EAAA0E,EAAY/L,2BAAe+L,EAAY9L,cAsBhDlB,EAASkN,EAAQR,EAASO,GAAgB,sBAE9ClF,EAAOhG,SAAQ,SAACoL,GACdC,EAAK/M,GAAG8M,GAAU,SAACE,GACjBlN,EAAQgN,EAAUE,EACpB,GACF,IAGIL,EAAYpN,MAAQoN,EAAY3L,SAClC+L,KAAKxN,IAAIoN,EAAYpN,KAInB2E,GAAUrE,OAAOoN,SAAS/I,IAC5B6I,KAAK7I,OAAOA,GASVC,GAAgBtE,OAAOoN,SAAS9I,KAElC4I,KAAK1I,oBAAoBF,GAEzB+I,uBACEH,EAAK5I,aAAaA,EACnB,GAAE,GAEP,IAYI0D,GACFD,EAAiBC,GAAWqC,KAAI,SAACa,GAAI,OAAKpL,EAAOwN,SAASpC,EAAK,IAIjE1L,IAMM+N,EAAgB,SAACrL,SACP,QAAdkG,EAAAtI,EAAOoC,eAAO,IAAAkG,GAAAA,EAAAwB,KAAA9J,EAAGoC,QAAAA,EAAW,CAAA,EAC9B,EAUA,MAAO,QACLpC,EACAyH,QAJiB,kBAASzH,EAAOyH,SAAO,mBAhBpB,SAAIiG,EAA6BC,GACrD1F,EAAiByF,GAAcnD,KAAI,SAACa,GAAI,OAAKpL,EAAO4N,YAAYxC,EAAK,IACrEnD,EAAiB0F,GAAcpD,KAAI,SAACa,GAAI,OAAKpL,EAAOwN,SAASpC,EAAK,GACpE,gBAmBEqC,mBAXoB,SAAuBtD,EAAQpJ,aACnD0M,MAAc,IAAGtD,GAAMpJ,EAAOkK,IACJ,QAA1B8B,EAAgB,QAAhBzE,EAAA1D,EAAYuF,UAAI,IAAA7B,OAAA,EAAAA,EAAEvI,gBAAQ,IAAAgN,GAAAA,EAAAjD,KAAAxB,EAAGtI,EAAQe,EACvC,EAWF,CGxHwB8M,CAAa,CAC7BnB,QAASV,EAAajL,MACtBsK,MAAOO,EACPzL,QAASsL,EAAQqC,OD5BW1L,ECgCV,CAClBpC,OAAQyM,EAAUzM,OAClBG,QAASsL,EAAQqC,MD9BvB7D,EAAelI,SAAQ,SAACoI,WACM,QAA5B4C,EAAkB,QAAlBzE,EAAA1D,EAAYuF,UAAM,IAAA7B,OAAA,EAAAA,EAAAnI,eAAU,IAAA4M,GAAAA,EAAAjD,KAAAxB,EAAAlG,EAAQpC,QAAM,SAAG+N,GAC3C3L,EAAQjC,QAAQiK,EAAuBD,GAAkB4D,EAC3D,GACF,IC8BIC,GACE,WAAA,OAAM3C,EAAMC,SAAK,SAChBqC,EAAcD,GACbhO,IAAMuO,EAAMC,EAAeR,GACrBS,EAAMD,EAAeP,GAC3BlB,EAAU2B,iBAAiBH,EAAKE,EAClC,GACA,CAAEE,WAAW,IAIfL,GAAK,WACG,OAAA3C,EAAMjJ,WAAO,SAClBkM,UAAe7B,EAAUgB,cAAca,QAAAA,EAAc,CAAA,EAAG,GACzD,CAAEC,MAAM,IAIV1J,EACGqF,iBAAQC,SAAgB,YAARA,KAChBpI,SAAO,SAAEoI,GACR6D,GACE,WAAA,OAAM3C,EAAMlB,EAAI,IAChB,SAAC4D,GAAQ,OAAKtB,EAAU+B,iBAAiBrE,EAAK4D,EAAS,GACvD,CAAEQ,MAAM,GAEZ,IFwFsB,SAAIvO,EAAgBoC,GAChD1C,IAAMoF,EAAO3C,OAAO2C,KAAK0D,GACnB4D,EAAQtH,EAAK2F,QACjB,SAACC,EAAQP,gBAAQhI,OAAA6C,OAAA7C,OAAA6C,OAAA,GAAM0F,KAAQO,EAAA,CAAA,GAACd,GAAM3B,EAAY2B,GAAK1B,OAAOzI,GAAMiL,GAAI,GACxE,CAAEtF,SAAS,EAAOC,SAAS,IAIvB6I,EAAW,SAAItE,EAAwBpJ,GAC3CqL,EAAMjC,GAAOpJ,EACbqB,EAAQsM,SAASvE,EAAKpJ,EAAKoB,OAAA6C,OAAA,CAAA,EAAOoH,GACpC,EAKApM,EAAOK,GAAG,CAAC,QAAS,UAAQ,WAC1BoO,EAAY,WAAW,EACzB,IACAzO,EAAOK,GAAG,CAAC,OAAQ,YAAU,WAC3BoO,EAAY,WAAW,EACzB,IAGAzO,EAAOK,GAAG,sBACRoO,EAAY,WAAW,GACvB/O,IAAMiP,EAAkB3O,EAAOiJ,cACzB2F,EAAkB,WAClBD,IAAoB3O,EAAOiJ,gBAC7BwF,EAAY,WAAW,GACvBzO,EAAO6O,IAAI,aAAcD,GAE7B,EACA5O,EAAOK,GAAG,aAAcuO,EAC1B,IAEA9J,EAAK/C,SAAQ,SAACoI,SACN2E,EAAStG,EAAY2B,GAE3BnK,EAAOK,GADY,CAAC,YAAa,kBACZiK,OAAiC,QAA1BhC,EAACwG,EAAe/G,cAAU,IAAAO,EAAAA,EAAA,KAAG,WACvDmG,EAAYtE,EAAK2E,EAAOrG,OAAOzI,GACjC,GACF,IAGAoC,EAAQ2M,OAAY5M,OAAA6C,OAAA,CAAA,EAAAoH,GACtB,CEnIM4C,CAAkBvC,EAAUzM,OAAQ,CAClC+O,OAAA,SAAOE,GACL7C,EAAMrL,MAAQkO,CACf,EACDP,SAAQ,SAACvE,EAAKpJ,GACRqL,EAAMrL,QACRqL,EAAMrL,MAAMoJ,GAAOpJ,EAEtB,IAIHkL,EAAalL,MAAQ0L,EACrBX,EAAQ/K,OAAQ,EAChB0K,EAAQqC,KAlFa,UAkFY,CAC/BoB,MAAOlD,EAAajL,MACpBf,OAAQkM,EAAcnL,MACtBqL,MAAOE,EAAcvL,OAEzB,IAEAoO,cACMlD,EAAalL,QACfkL,EAAalL,MAAM0G,UACnBwE,EAAalL,MAAQ,KACrBqL,EAAMrL,MAAQ,KACd0K,EAAQqC,KA7Fa,aA+FzB,uBAGE,OAAOsB,EAAE,MAAO,CAAE,kBAAmB,GAAI9D,MAAO4C,EAAevC,IAAkB,CAC/EyD,EAAE,QAAS,CACT9D,MAAO,CAAC,WAAY,kBACpBe,IAAKL,IAEPF,EAAQ/K,QACkB,QAAxBgM,KAAAtB,EAAQ4D,OAAMrE,eAAU,IAAA+B,OAAA,EAAAA,EAAAjD,KAAAxB,EAAA,CACtB4G,MAAOlD,EAAajL,MACpBf,OAAQkM,EAAcnL,MACtBqL,MAAOE,EAAcvL,UAG7B,CACD,IC7GUuO,EAAcpE,EACdqE,EAAkB,SAACC,GAC9BA,EAAIC,UAAU,cAAevE,GAC7BsE,EAAIC,UAAUvE,EAAUE,KAAMF,EAChC,EAEevJ,EAAA,CACb2N,YAAapE,UACbqE"}